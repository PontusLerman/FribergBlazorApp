@* Author: Pontus Lerman *@
@page "/superrealtor/newrealtorindex"
@using System.Security.Claims
@inject HttpClient Http
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

<h3>NewRealtorIndex</h3>
@if (realtors == null)
{
    <h3>Loading...</h3>
}
else
{
    <table>
        <thead>
        <th>Bild</th>
        <th>Förnamn</th>
        <th>Efternamn</th>
        <th>Email</th>
        <th>Telefonnummer</th>
        <th>Mäklarbyrå</th>
        </thead>
        <tbody>
            @foreach (var realtor in FilteredNewRealtors())
            {
                <tr>
                    <td>@realtor.Picture</td>
                    <td>@realtor.FirstName</td>
                    <td>@realtor.LastName</td>
                    <td>@realtor.Email</td>
                    <td>@realtor.PhoneNumber</td>
                    <td>@realtor.Agency.AgencyName</td>
                    <td><button class="btn btn-primary" @onclick="() => ChangeBool(realtor)">Godkänn</button></td>
                </tr>
            }
        </tbody>
    </table>
    <button class="btn btn-primary" onclick=@(() =>NavigationManager.NavigateTo($"/register/realtor"))>Skapa</button>
}

@code {
    List<RealtorDto> allRealtors = new List<RealtorDto>();
    IEnumerable<RealtorDto> realtors;
    RealtorDto realtor = new RealtorDto();
    AgencyDto agencyDto = new AgencyDto();
    AuthResponseDto currentUser = new AuthResponseDto();

    protected override async Task OnInitializedAsync()
    {
        currentUser = await LocalStorage.GetItemAsync<AuthResponseDto>("currentUser");
        realtor = await Http.GetFromJsonAsync<RealtorDto>($"api/realtor/{currentUser.Id}");
        allRealtors = await Http.GetFromJsonAsync<List<RealtorDto>>($"api/realtor/realtors-by-agency/{realtor.Agency.AgencyId}");

        FilteredNewRealtors();
    }

    private IEnumerable<RealtorDto> FilteredNewRealtors()
    {
        return realtors = allRealtors.Where(r => !r.Approved); 
    }

    private void ChangeBool(RealtorDto realtorFromList)
    {
        realtorFromList.Approved = true;
        realtorFromList.Password = "s";
        SaveRealtorToDatabase(realtorFromList);
    }

    private async void SaveRealtorToDatabase(RealtorDto realtorFromList)
    {
        await Http.PutAsJsonAsync<RealtorDto>($"api/realtor/{realtorFromList.Id}", realtorFromList);
    }
}
