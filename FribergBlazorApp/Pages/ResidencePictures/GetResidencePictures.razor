@page "/rp"
@inject HttpClient Http
@inject NavigationManager Navigation
@using FribergBlazorApp.Helpers

<h3>Bilder</h3>
<div style="position: absolute; right: 50px;">
    <input type="text" @bind:event="oninput" @bind="searchTerm" placeholder="Sök..." />
</div>
<td><button @onclick="() => AddPictures()">Skapa en ny bild</button></td>

@if (pictures == null)
{
    <p><em>Laddar...</em></p>
    <p>@errorString</p>
}
else if (errorString != null)
{
    <p>An error occurred: @errorString</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Bild</th>
                <th>Bostads ID</th>
                <th>Val</th>             
            </tr>
        </thead>
        <tbody>
            @foreach (var picture in FilteredItems)
            {
                <tr>
                    <td>@picture.Id</td>
                    <td><img src="@picture.picture" alt="Picture" style="max-width: 200px; max-height: 200px;" /></td>
                    <td>@picture.ResidenceId</td>
                    <td>
                        <button @onclick="() => EditPictures(picture.Id)">Ändra</button>
                        <button @onclick="() => RemovePictures(picture.Id)">Radera</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Picture>? pictures;
    private string? errorString;
    private string? searchTerm;
    private SearchFilter<Picture>? filter; 

    protected override async Task OnInitializedAsync()
    {
        try
        {
            pictures = await Http.GetFromJsonAsync<List<Picture>>("https://localhost:7280/api/residencepictures");
            filter = new SearchFilter<Picture>(pictures, c => c.ResidenceId.ToString(), c => c.Id.ToString());
        }
        catch (Exception ex)
        {
            errorString = $"Felmeddelande: {ex.Message}";
        }
    }

    private IEnumerable<Picture> FilteredItems
    {
        get
        {
            if (filter != null)
            {
                filter.SearchTerm = searchTerm;
                return filter.ApplyFilter();
            }
            return pictures ?? Enumerable.Empty<Picture>();
        }
    }

    private void AddPictures()
    {
        Navigation.NavigateTo("/prp");
    }

    private void EditPictures(int pictureId)
    {
        Navigation.NavigateTo($"/erp/{pictureId}");
    }

    private void RemovePictures(int pictureId)
    {
        Navigation.NavigateTo($"drp/{pictureId}");
    }
}
