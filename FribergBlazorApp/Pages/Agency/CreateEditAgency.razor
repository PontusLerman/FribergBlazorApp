@page "/cea"
@page "/cea/{id:int}"

@inject HttpClient Http
@inject NavigationManager NavigationManager

@if (Id == null)
{
    <h3>Ny mäklarbyrå</h3>
}
else
{
    <h3>Ändra @agency.agencyName</h3>
}

<EditForm Model="agency" OnSubmit="HandleSubmit">
    <div>
        <label for="agencyLogoURL">Mäklarbyrå logotyp url:</label>
        <InputText id="agencyLogoURL" @bind-Value="agency.agencyLogoURL" class="form-control" />
    </div>
    <div>
        <label for="agencyName">Mäklarbyrå namn:</label>
        <InputText id="agencyName" @bind-Value="agency.agencyName" class="form-control" />
    </div>    
    <div>
        <label for="agencyDescription">Mäklarbyrå beskrivning:</label>
        <InputText id="agencyDescription" @bind-Value="agency.agencyDescription" class="form-control" />
    </div>
    @if (Id==null)
    {
        <FribergBlazorApp.Components.CreateRealtor Id=agency.agencyId realtor="realtor"/>
    }
    <button class="btn btn-primary" type="submit">Spara</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    public Agency agency { get; set; } = new Agency();
    public Realtor realtor { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            var result = await Http.GetFromJsonAsync<Agency>($"api/agencies/{Id}");
            if (result != null)
            {
                agency = result;
            }
        }
    }

    async Task HandleSubmit()
    {
        if (Id != null)
        {
            var result = await Http.PutAsJsonAsync($"api/agencies/{Id}", agency);
            NavigationManager.NavigateTo("/ga");
        }
        else
        {
            agency.employees.Add(realtor);
            var result = await Http.PostAsJsonAsync($"api/agencies/{Id}", agency);
            NavigationManager.NavigateTo("/ga");
        }
    }
}
