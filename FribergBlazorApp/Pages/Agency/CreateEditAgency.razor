@page "/cea/{id:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager

@if (Id == null)
{
    <h3>Ny mäklarbyrå</h3>
}
else
{
    <h3>Ändra @agency.AgencyName</h3>
}

<EditForm Model="agency" OnSubmit="HandleSubmit">
    <div>
        <label for="agencyLogoURL">Mäklarbyrå logotyp url:</label>
        <InputText id="agencyLogoURL" @bind-Value="agency.AgencyLogoURL" class="form-control" />
    </div>
    <div>
        <label for="agencyName">Mäklarbyrå namn:</label>
        <InputText id="agencyName" @bind-Value="agency.AgencyName" class="form-control" />
    </div>    
    <div>
        <label for="agencyDescription">Mäklarbyrå beskrivning:</label>
        <InputText id="agencyDescription" @bind-Value="agency.AgencyDescription" class="form-control" />
    </div>
    <button class="btn btn-primary" type="submit">Spara</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }
    public AgencyDto agency { get; set; } = new AgencyDto();
    public RealtorDto realtor { get; set; }
    string errorString;

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            var result = await Http.GetFromJsonAsync<AgencyDto>($"api/agencies/{Id}");
            if (result != null)
            {
                agency = result;
            }
        }
    }

    async Task HandleSubmit()
    {
        try
        {
            var result = await Http.PutAsJsonAsync($"api/agencies/{Id}", agency);
            NavigationManager.NavigateTo("/ga");
        }
        catch (Exception ex)
        {
            errorString = ex.Message;          
        }
    }
}
