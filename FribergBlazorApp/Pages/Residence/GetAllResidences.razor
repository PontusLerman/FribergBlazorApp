@*author: Johan Krångh*@
@page "/allresidences"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Alla Bostäder</h3>

@if (residences == null)
{
    <p><em>Laddar...</em></p>
    <p>@errorString</p>
}
else if (errorString != null)
{
    <p>An error occurred: @errorString</p>
}
else    @*TODO: Fix front end*@
{
    <div class="main">
        <ul class="house-cards">
            @foreach (var residence in residences)
            {
                <li style="background-image: url('@(HouseCardBackground(residence.Id)) ')"> @*@onclick="@(DetailsPage)"*@
                    <div class="house-info">
                        <span class="title">@residence.Category.Name @residence.Municipality.MunicipalityName</span>
                        @residence.ObjectDescription
                        <span class="price">@residence.StartingPrice</span>
                    </div>
                </li>
            }
        </ul>
    </div>
}

@code {
    private List<ResidenceDto>? residences;
    private string? errorString;
    private string DefaultPicture = "https://saterdesign.com/cdn/shop/products/property-placeholder_a9ec7710-1f1e-4654-9893-28c34e3b6399_600x.jpg?v=1500393334";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            residences = await Http.GetFromJsonAsync<List<ResidenceDto>>("api/residence");
        }
        catch (Exception ex)
        {
            errorString = $"Exception: {ex.Message}";
        }
    }

    protected string HouseCardBackground(int id)
    {
        ResidenceDto residence = residences.FirstOrDefault(x => x.Id == id);
        if (residence.Pictures.Count() != 0)
        {
            return residence.Pictures[0].Picture; 
        } 
        else { return DefaultPicture; }
    }
}

