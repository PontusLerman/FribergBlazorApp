@* Author: Pontus Lerman *@
@page "/agencydetails/{id:int}"
@inject HttpClient HttpClient

@if (agency == null)
{
    <p><em>Laddar...</em></p>
    <p>@errorString</p>
}
else if (errorString != null)
{
    <p>An error occurred: @errorString</p>
}
else
{
    <h3>@agency.AgencyName</h3>
    <h4>@agency.AgencyDescription</h4>
    <div class="person-main">
        <ul class="person-cards">
            
            @foreach (var realtor in realtors)
            {
                <div class="realtor-container">
                    <li style="background-image: url('@(realtor.Picture)')" ></li>
                        <div class="realtor-info">
                            <div class="info-column">
                            <p>Namn:</p>
                            <p>Email:</p>
                            <p>Telefonnr:</p>
                        </div>
                        <div class="info-column">
                            <p>@realtor.FirstName @realtor.LastName</p>
                            <p>@realtor.Email</p>
                            <p>@realtor.PhoneNumber</p>
                        </div>
                 </div>
            </div>
            }            
        </ul>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }
    string errorString;
    AgencyDto agency = new AgencyDto();
    List<RealtorDto> realtors = new List<RealtorDto>();

    protected override async Task OnInitializedAsync()
    {
        agency = await HttpClient.GetFromJsonAsync<AgencyDto>($"api/agencies/{Id}");
        realtors = await HttpClient.GetFromJsonAsync<List<RealtorDto>>($"api/realtor/realtors-by-agency/{Id}");
    }
}

