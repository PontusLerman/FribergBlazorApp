@* Author: Pontus Lerman, co-author: Johan Krångh *@
@page "/recidencedetails/{id:int}"
@inject HttpClient HttpClient
@inject IOverlayService OverlayService

@if (residence.Category == null)
{
    <p><em>Laddar...</em></p>
    <p>@errorString</p>
}
else if (errorString != null)
{
    <p>An error occurred: @errorString</p>
}
else
{
    <div class="main">      
        <div class="container">
            <div class="header">
                <h1>@residence.Category.Name @residence.Municipality.MunicipalityName</h1>
            </div>
            <div class="residence-list">
                <div class="residence-item">
                    <div class="residence-title">@residence.Address</div>
                    <div class="residence-detail"><span>Pris:</span> @(residence.StartingPrice):-</div>
                    <div class="residence-detail"><span>Boyta:</span> @(residence.LivingArea) Kvm</div>
                    <div class="residence-detail"><span>Antal rum:</span> @(residence.NumberOfRooms)</div>
                    <div class="residence-detail"><span>Byggår:</span> @(residence.ConstructionYear)</div>
                    <div class="residence-detail"><span>Biyta:</span> @(residence.BiArea) Kvm</div>
                    <div class="residence-detail"><span>Tomt:</span> @(residence.PlotArea) Kvm</div>
                    <div class="residence-detail"><span>Månadskostnad:</span> @(residence.MonthlyFee):-</div>
                    <div class="residence-detail"><span>Driftkostnad:</span> @(residence.OperatingCostPerYear):-</div>
                    <div class="residence-detail">@(residence.ObjectDescription)</div>
                </div>
            </div>
        </div>


        <ul class="house-cards">
            @foreach (var p in residence.Pictures)
            {
                <li style="background-image: url('@(p.Picture) ')" @onclick="() => ShowOverlay(p.Picture)" />               
            }
        </ul>
    </div>

    <div class="person-main">
        <ul class="person-cards">

                <div class="realtor-container">
                <li style="background-image: url('@(residence.Realtor.Picture)')"></li>
                <div class="realtor-info">
                    <div class="info-column">
                        <p>Namn:</p>
                        <p>Email:</p>
                        <p>Telefonnr:</p>
                    </div>
                    <div class="info-column">
                    <p>@residence.Realtor.FirstName @residence.Realtor.LastName</p>
                    <p>@residence.Realtor.Email</p>
                    <p>@residence.Realtor.PhoneNumber</p>
                    </div>
                </div>
        </div>
            
            </ul>
        </div>

    @if (OverlayService.IsVisible)
    {
        <div class="overlay" @onclick="CloseOverlay">
            <div class="overlay-content">
                <img src="@OverlayService.ImageUrl" alt="Stor bild" />
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public int Id { get; set; }
    string errorString;
    ResidenceDto residence = new ResidenceDto() {};

    protected override async Task OnInitializedAsync()
    {
        residence = await HttpClient.GetFromJsonAsync<ResidenceDto>($"api/Residence/{Id}");
    }

    private void ShowOverlay(string imageUrl)
    {
        OverlayService.ShowImage(imageUrl);
    }

    private void CloseOverlay()
    {
        OverlayService.HideImage();
    }
}
